name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. v1.2.3)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ github.event.inputs.version }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for changelog generation

      - name: Validate version format
        run: |
          if ! [[ ${{ github.event.inputs.version }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$ ]]; then
            echo "Error: Version must follow semantic versioning format (e.g. v1.2.3)"
            exit 1
          fi

      - name: Check if tag exists
        run: |
          if git rev-parse ${{ github.event.inputs.version }} >/dev/null 2>&1; then
            echo "Error: Tag ${{ github.event.inputs.version }} already exists"
            exit 1
          fi

      - name: Generate Changelog
        uses: orhun/git-cliff-action@v3
        with:
          config: cliff.toml
          args: --tag ${{ github.event.inputs.version }} --unreleased --strip header
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a ${{ github.event.inputs.version }} -m "Release ${{ github.event.inputs.version }}"
          git push origin ${{ github.event.inputs.version }}

      - name: Trigger CI workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          event-type: release-created
          client-payload: '{"version": "${{ github.event.inputs.version }}"}'

      - name: Extract Curio version from go.mod
        id: curio_version
        run: |
          CURIO_VERSION=$(grep 'github.com/filecoin-project/curio' go.mod | awk '{print $2}')
          echo "curio_version=$CURIO_VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.version }}+curio-${{ steps.curio_version.outputs.curio_version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
